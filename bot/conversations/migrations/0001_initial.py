# Generated by Django 5.2 on 2025-05-24 10:59

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("create_agent", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Conversation",
            fields=[
                (
                    "conversation_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                (
                    "conversation_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_favorite", models.BooleanField(default=False)),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agent_conversations",
                        to="create_agent.agent",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ConversationMessages",
            fields=[
                ("message_id", models.AutoField(primary_key=True, serialize=False)),
                ("sender_id", models.IntegerField(blank=True, null=True)),
                ("sender_type", models.CharField(blank=True, max_length=50, null=True)),
                ("message_text", models.TextField(blank=True, null=True)),
                (
                    "message_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("message_time", models.DateTimeField(auto_now_add=True)),
                ("is_read", models.BooleanField(default=False)),
                ("is_deleted", models.BooleanField(default=False)),
                ("is_archived", models.BooleanField(default=False)),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="conversations.conversation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ConversationAttachments",
            fields=[
                ("attachment_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "attachment_name",
                    models.CharField(
                        blank=True,
                        help_text="The name of the attachment file.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "attachment_path",
                    models.CharField(
                        blank=True,
                        help_text="The storage path or URL of the attachment.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "attachment_type",
                    models.CharField(
                        blank=True,
                        help_text="The MIME type or file type of the attachment.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "attachment_size",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="The size of the attachment in bytes.",
                        null=True,
                    ),
                ),
                (
                    "message",
                    models.ForeignKey(
                        help_text="The message this attachment belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="conversations.conversationmessages",
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversation Attachment",
                "verbose_name_plural": "Conversation Attachments",
                "ordering": ["-attachment_id"],
            },
        ),
        migrations.CreateModel(
            name="ConversationFeedback",
            fields=[
                ("feedback_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "feedback_text",
                    models.TextField(
                        blank=True, help_text="The content of the feedback.", null=True
                    ),
                ),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Optional rating value (e.g., 1-5).",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the feedback was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the feedback was last updated.",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, help_text="Indicates if the feedback is deleted."
                    ),
                ),
                (
                    "conversation",
                    models.ForeignKey(
                        help_text="The conversation this feedback is associated with.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback",
                        to="conversations.conversation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversation Feedback",
                "verbose_name_plural": "Conversation Feedback",
                "ordering": ["-created_at", "-feedback_id"],
                "unique_together": {("conversation", "feedback_text")},
            },
        ),
        migrations.CreateModel(
            name="ConversationNotes",
            fields=[
                ("note_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "note_text",
                    models.TextField(
                        blank=True, help_text="The content of the note.", null=True
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the note was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the note was last updated.",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Indicates if the note is active."
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, help_text="Indicates if the note is deleted."
                    ),
                ),
                (
                    "conversation",
                    models.ForeignKey(
                        help_text="The conversation this note is associated with.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notes",
                        to="conversations.conversation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversation Note",
                "verbose_name_plural": "Conversation Notes",
                "ordering": ["-created_at", "-note_id"],
                "unique_together": {("conversation", "note_text")},
            },
        ),
        migrations.CreateModel(
            name="ConversationTag",
            fields=[
                ("tag_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "tag_name",
                    models.CharField(help_text="The name of the tag.", max_length=255),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the tag was created.",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the tag was last updated.",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Indicates if the tag is active."
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, help_text="Indicates if the tag is deleted."
                    ),
                ),
                (
                    "conversation",
                    models.ForeignKey(
                        help_text="The conversation this tag is associated with.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tags",
                        to="conversations.conversation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversation Tag",
                "verbose_name_plural": "Conversation Tags",
                "ordering": ["-created_at", "-tag_id"],
                "unique_together": {("conversation", "tag_name")},
            },
        ),
    ]
